{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./items.service\";\nexport class ItemformComponent {\n  constructor(_formbuilder, _router, _route, _itemService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._itemService = _itemService;\n    this.isEditMode = false;\n    this.itemId = -1;\n    this.itemForm = _formbuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ItemCreate form submitted:\");\n    console.log(this.itemForm);\n    const newItem = this.itemForm.value;\n    if (this.isEditMode) {\n      this._itemService.updateItem(this.itemId, newItem).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/items']);\n        } else {\n          console.log('Item update failed');\n        }\n      });\n    } else {\n      this._itemService.createItem(newItem).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/items']);\n        } else {\n          console.log('Item creation failed');\n        }\n      });\n    }\n  }\n  backToItems() {\n    this._router.navigate(['/items']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(parms => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (parms['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.itemId = +params['id']; // Convert to number\n        this.loadItemForEdit(this.itemId);\n      }\n    });\n  }\n  loadItemForEdit(itemId) {\n    this._itemService.getItemById(itemId).subscribe(item => {\n      console.log('retrived item: ', item);\n      this.itemForm.patchValue({\n        name: item.Name,\n        price: item.Price,\n        description: item.Description,\n        imageUrl: item.ImageUrl\n      });\n    }, error => {\n      console.error('Error loading item for edit:', error);\n    });\n  }\n}\nItemformComponent.ɵfac = function ItemformComponent_Factory(t) {\n  return new (t || ItemformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ItemService));\n};\nItemformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemformComponent,\n  selectors: [[\"app-items-itemform\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function ItemformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ItemformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"textarea\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 10);\n      i0.ɵɵtext(20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function ItemformComponent_Template_button_click_21_listener() {\n        return ctx.backToItems();\n      });\n      i0.ɵɵtext(22, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Item\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"disabled\", ctx.itemForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" Item\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","ItemformComponent","constructor","_formbuilder","_router","_route","_itemService","itemForm","group","name","required","price","description","imageUrl","onSubmit","console","log","newItem","value","isEditMode","updateItem","itemId","subscribe","response","success","message","navigate","createItem","backToItems","ngOnInit","params","parms","loadItemForEdit","getItemById","item","patchValue","Name","Price","Description","ImageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\jnyao\\OneDrive - OsloMet\\Dokumenter\\Uni\\Semester 5\\Webapplikasjoner\\Angular\\Group_Project_2\\Group_Project_2\\ClientApp\\src\\app\\items\\itemform.component.ts","C:\\Users\\jnyao\\OneDrive - OsloMet\\Dokumenter\\Uni\\Semester 5\\Webapplikasjoner\\Angular\\Group_Project_2\\Group_Project_2\\ClientApp\\src\\app\\items\\itemform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ItemService } from './items.service';\r\n\r\n@Component({\r\n  selector: \"app-items-itemform\",\r\n  templateUrl: \"./itemform.component.html\"\r\n})\r\nexport class ItemformComponent {\r\n  itemForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  itemId: number = -1;\r\n\r\n  constructor(\r\n    private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _itemService: ItemService\r\n  ) {\r\n    this.itemForm = _formbuilder.group({\r\n      name: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      description: [''],\r\n      imageUrl: ['']\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"ItemCreate form submitted:\");\r\n    console.log(this.itemForm);\r\n    const newItem = this.itemForm.value;\r\n    if (this.isEditMode) {\r\n      this._itemService.updateItem(this.itemId, newItem)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/items']);\r\n          } else {\r\n            console.log('Item update failed');\r\n          }\r\n        });\r\n    } else {\r\n      this._itemService.createItem(newItem)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/items']);\r\n          }\r\n          else {\r\n            console.log('Item creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToItems() {\r\n    this._router.navigate(['/items']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(parms => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (parms['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.itemId = +params['id']; // Convert to number\r\n        this.loadItemForEdit(this.itemId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadItemForEdit(itemId: number) {\r\n    this._itemService.getItemById(itemId)\r\n      .subscribe(\r\n        (item: any) => {\r\n          console.log('retrived item: ', item);\r\n          this.itemForm.patchValue({\r\n            name: item.Name,\r\n            price: item.Price,\r\n            description: item.Description,\r\n            imageUrl: item.ImageUrl\r\n          });\r\n        }, (error: any) => {\r\n          console.error('Error loading item for edit:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\n","<h2>{{ isEditMode ? 'Update' : 'Create'}} Item</h2>\n\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"price\">Price:</label>\n    <input type=\"number\" id=\"price\" formControlName=\"price\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Description:</label>\n    <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"imageUrl\">Image URL:</label>\n    <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" />\n  </div>\n  <button class='btn btn-primary' type=\"submit\" [disabled]=\"itemForm.invalid\">\n      {{ isEditMode ? 'Update' : 'Create'}} Item</button>\n  <button class='btn btn-secondary' (click)=\"backToItems()\">Cancel</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}